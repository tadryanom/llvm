# RUN: llvm-mc -triple=tilegx -show-encoding < %s | FileCheck %s

# Check that the assembler can handle the documented syntax
# for tilegx instructions.
# We test all instructions defined in TileInstrInfo.td.

  .globl _func
_func:
# CHECK: _func:

#--------------------------------------------------------
# ALU/LOGIC Instructions
#--------------------------------------------------------
add r7, r27, r50 
# CHECK: add r7, r27, r50    # encoding: [0x00,0x30,0x48,0xd1,0x63,0x93,0x07,0x28]
add r7, tp, r27 
# CHECK: add r7, tp, r27    # encoding: [0x00,0x30,0x48,0xd1,0xa3,0xde,0x06,0x28]
add lr, tp, r27 
# CHECK: add lr, tp, r27    # encoding: [0x00,0x30,0x48,0xd1,0xbb,0xde,0x06,0x28]
add lr, tp, r52 
# CHECK: add lr, tp, r52    # encoding: [0x00,0x30,0x48,0xd1,0xbb,0xa6,0x07,0x28]
add lr, tp, zero 
# CHECK: add lr, tp, zero    # encoding: [0x00,0x30,0x48,0xd1,0xbb,0xfe,0x07,0x28]
addx r7, r27, r50 
# CHECK: addx r7, r27, r50    # encoding: [0x00,0x30,0x48,0xd1,0x63,0x93,0x05,0x28]
addi r7, r27, 127 
# CHECK: addi r7, r27, 127    # encoding: [0x00,0x30,0x48,0xd1,0x63,0xfb,0x0b,0x18]
addxi r7, r27, 127 
# CHECK: addxi r7, r27, 127    # encoding: [0x00,0x30,0x48,0xd1,0x63,0xfb,0x13,0x18]
addxli r7, r27, 32767 
# CHECK: addxli r7, r27, 32767    # encoding: [0x00,0x30,0x48,0xd1,0x63,0xfb,0xff,0x0b]
sub r10, r27, r47 
# CHECK: sub r10, r27, r47    # encoding: [0x00,0x30,0x48,0x51,0x65,0x7b,0x69,0x28]
subx r11, r28, r49 
# CHECK: subx r11, r28, r49    # encoding: [0x00,0x30,0x48,0xd1,0x85,0x8b,0x67,0x28]
and r11, r8, r40 
# CHECK: and r11, r8, r40    # encoding: [0x00,0x30,0x48,0xd1,0x05,0x41,0x09,0x28]
andi r11, r8, 40 
# CHECK: andi r11, r8, 40    # encoding: [0x00,0x30,0x48,0xd1,0x05,0x41,0x19,0x18]
or r12, r3, r21 
# CHECK: or r12, r3, r21    # encoding: [0x00,0x30,0x48,0x51,0x66,0xa8,0x3a,0x28]
ori r12, r3, 21 
# CHECK: ori r12, r3, 21    # encoding: [0x00,0x30,0x48,0x51,0x66,0xa8,0xc0,0x18]
xor r12, r3, r22 
# CHECK: xor r12, r3, r22    # encoding: [0x00,0x30,0x48,0x51,0x66,0xb0,0xd6,0x28]
xori r12, r3, 127 
# CHECK: xori r12, r3, 127    # encoding: [0x00,0x30,0x48,0x51,0x66,0xf8,0x6b,0x19]
nor r1, r3, r22 
# CHECK: nor r1, r3, r22    # encoding: [0x00,0x30,0x48,0xd1,0x60,0xb0,0x38,0x28]
shl r1, r3, r22 
# CHECK: shl r1, r3, r22    # encoding: [0x00,0x30,0x48,0xd1,0x60,0xb0,0x4c,0x28]
shlx r1, r3, r22 
# CHECK: shlx r1, r3, r22    # encoding: [0x00,0x30,0x48,0xd1,0x60,0xb0,0x4a,0x28]
shli r1, r3, 17 
# CHECK: shli r1, r3, 17    # encoding: [0x00,0x30,0x48,0xd1,0x60,0x88,0x04,0x30]
shlxi r1, r3, 4 
# CHECK: shlxi r1, r3, 4    # encoding: [0x00,0x30,0x48,0xd1,0x60,0x20,0x06,0x30]
shru r1, r3, r7 
# CHECK: shru r1, r3, r7    # encoding: [0x00,0x30,0x48,0xd1,0x60,0x38,0x52,0x28]
shrux r1, r3, r7 
# CHECK: shrux r1, r3, r7    # encoding: [0x00,0x30,0x48,0xd1,0x60,0x38,0x50,0x28]
shrui r1, r3, 9 
# CHECK: shrui r1, r3, 9    # encoding: [0x00,0x30,0x48,0xd1,0x60,0x48,0x0a,0x30]
shruxi r1, r3, 19 
# CHECK: shruxi r1, r3, 19    # encoding: [0x00,0x30,0x48,0xd1,0x60,0x98,0x0c,0x30]
shrs r1, r3, r7 
# CHECK: shrs r1, r3, r7    # encoding: [0x00,0x30,0x48,0xd1,0x60,0x38,0x4e,0x28]
shrsi r1, r3, 31 
# CHECK: shrsi r1, r3, 31    # encoding: [0x00,0x30,0x48,0xd1,0x60,0xf8,0x08,0x30]
movei r3, 127 
# CHECK: movei r3, 127    # encoding: [0x00,0x30,0x48,0xd1,0xe1,0xff,0x0b,0x18]
moveli r33, 32767 
# CHECK: moveli r33, 32767    # encoding: [0x00,0x30,0x48,0xd1,0xf0,0xff,0xff,0x03]
shl16insli r0, zero, -127 
# CHECK: shl16insli r0, zero, -127    # encoding: [0x00,0x30,0x48,0x51,0xe0,0x0f,0xfc,0x3f]

#--------------------------------------------------------
# BIT 
#--------------------------------------------------------
clz r0, r49 
# CHECK: clz r0, r49    # encoding: [0x40,0x1c,0x48,0x51,0x00,0x30,0x6a,0x28]
ctz r1, r39 
# CHECK: ctz r1, r39    # encoding: [0xc1,0x29,0x48,0x51,0x00,0x30,0x6a,0x28]
rotl r0, r1, r2 
# CHECK: rotl r0, r1, r2    # encoding: [0x00,0x30,0x48,0x51,0x20,0x10,0x3c,0x28]
rotli r0, r1, 8 
# CHECK: rotli r0, r1, 8    # encoding: [0x00,0x30,0x48,0x51,0x20,0x40,0x02,0x30]
pcnt r1, r39 
# CHECK: pcnt r1, r39    # encoding: [0xc1,0x69,0x48,0x51,0x00,0x30,0x6a,0x28]
revbytes r7, r17 
# CHECK: revbytes r7, r17    # encoding: [0x47,0x84,0x48,0x51,0x00,0x30,0x6a,0x28]

#--------------------------------------------------------
# CMP 
#--------------------------------------------------------
cmplts r3, r4, r5 
# CHECK: cmplts r3, r4, r5    # encoding: [0x00,0x30,0x48,0xd1,0x81,0x28,0x14,0x28]
cmpltu r3, r4, r5 
# CHECK: cmpltu r3, r4, r5    # encoding: [0x00,0x30,0x48,0xd1,0x81,0x28,0x16,0x28]
cmpltsi r3, r4, 127 
# CHECK: cmpltsi r3, r4, 127    # encoding: [0x00,0x30,0x48,0xd1,0x81,0xf8,0x2b,0x18]
cmpltui r3, r4, 127 
# CHECK: cmpltui r3, r4, 127    # encoding: [0x00,0x30,0x48,0xd1,0x81,0xf8,0x33,0x18]

#--------------------------------------------------------
# LOAD/STORE
#--------------------------------------------------------
ld r7, r17 
# CHECK: ld r7, r17    # encoding: [0x00,0x30,0x1c,0x35,0x00,0x40,0x3e,0x9e]
ld1s r8, r18 
# CHECK: ld1s r8, r18    # encoding: [0x00,0x30,0x2c,0x31,0x00,0x40,0x46,0x5c]
ld1u r9, r19 
# CHECK: ld1u r9, r19    # encoding: [0x00,0x30,0x3c,0x35,0x00,0x40,0x4e,0x5c]
ld2s r10, r20 
# CHECK: ld2s r10, r20    # encoding: [0x00,0x30,0x4c,0x31,0x00,0x40,0x56,0x5e]
ld2u r11, r21 
# CHECK: ld2u r11, r21    # encoding: [0x00,0x30,0x5c,0x35,0x00,0x40,0x5e,0x5e]
ld4s r12, r22 
# CHECK: ld4s r12, r22    # encoding: [0x00,0x30,0x6c,0x35,0x00,0x40,0x66,0x9c]
ld4u r13, r23 
# CHECK: ld4u r13, r23    # encoding: [0x00,0x30,0x7c,0x31,0x00,0x40,0x6e,0x9e]
st r0, r1 
# CHECK: st r0, r1    # encoding: [0x00,0x30,0x0c,0x34,0x00,0x40,0x0e,0xde]
st1 r1, r2 
# CHECK: st1 r1, r2    # encoding: [0x00,0x30,0x1c,0x30,0x00,0x40,0x16,0xdc]
st2 r2, r3 
# CHECK: st2 r2, r3    # encoding: [0x00,0x30,0x2c,0x34,0x00,0x40,0x1e,0xdc]
st4 r3, r4 
# CHECK: st4 r3, r4    # encoding: [0x00,0x30,0x3c,0x30,0x00,0x40,0x26,0xde]

#--------------------------------------------------------
# CMOV
#--------------------------------------------------------
cmovnez r10, r11, r12 

#--------------------------------------------------------
# ATOMIC
#--------------------------------------------------------
# CHECK: cmovnez r10, r11, r12    # encoding: [0xca,0xc2,0x18,0x50,0x00,0x30,0x6a,0x28]
fetchadd r20, r30, r40 
# CHECK: fetchadd r20, r30, r40    # encoding: [0x00,0x30,0x48,0x51,0xca,0x43,0x2b,0x28]
fetchadd4 r21, r31, r41 
# CHECK: fetchadd4 r21, r31, r41    # encoding: [0x00,0x30,0x48,0xd1,0xea,0x4b,0x25,0x28]
fetchand r22, r32, r42 
# CHECK: fetchand r22, r32, r42    # encoding: [0x00,0x30,0x48,0x51,0x0b,0x54,0x2f,0x28]
fetchand4 r23, r33, r43 
# CHECK: fetchand4 r23, r33, r43    # encoding: [0x00,0x30,0x48,0xd1,0x2b,0x5c,0x2d,0x28]
fetchor r24, r34, r45 
# CHECK: fetchor r24, r34, r45    # encoding: [0x00,0x30,0x48,0x51,0x4c,0x6c,0x33,0x28]
fetchor4 r25, r34, r45 
# CHECK: fetchor4 r25, r34, r45    # encoding: [0x00,0x30,0x48,0xd1,0x4c,0x6c,0x31,0x28]
exch r26, r36, r46 
# CHECK: exch r26, r36, r46    # encoding: [0x00,0x30,0x48,0x51,0x8d,0x74,0x23,0x28]
exch4 r27, r37, r47 
# CHECK: exch4 r27, r37, r47    # encoding: [0x00,0x30,0x48,0xd1,0xad,0x7c,0x21,0x28]

#--------------------------------------------------------
# JUMP REGISTER
#--------------------------------------------------------
jr r6 
# CHECK: jr r6    # encoding: [0x00,0x30,0x48,0x51,0xc0,0x70,0x6a,0x28]
jrp r7 
# CHECK: jrp r7    # encoding: [0x00,0x30,0x48,0x51,0xe0,0x68,0x6a,0x28]
jalr r8 
# CHECK: jalr r8    # encoding: [0x00,0x30,0x48,0x51,0x00,0x61,0x6a,0x28]

#--------------------------------------------------------
# MUL
#--------------------------------------------------------
mulx r0, r1, r2 
# CHECK: mulx r0, r1, r2    # encoding: [0x40,0x20,0xd0,0x50,0x00,0x30,0x6a,0x28]
mul_hu_lu r1, r2, r3 
# CHECK: mul_hu_lu r1, r2, r3    # encoding: [0x81,0x30,0xec,0x50,0x00,0x30,0x6a,0x28]
mula_hu_lu r2, r3, r4 
# CHECK: mula_hu_lu r2, r3, r4    # encoding: [0xc2,0x40,0xc0,0x50,0x00,0x30,0x6a,0x28]
mula_lu_lu r2, r3, r4 
# CHECK: mula_lu_lu r2, r3, r4    # encoding: [0xc2,0x40,0xcc,0x50,0x00,0x30,0x6a,0x28]

#--------------------------------------------------------
# SPECIAL
#--------------------------------------------------------
mf 
# CHECK: mf    # encoding: [0x00,0x30,0x48,0x51,0x00,0xf8,0x6a,0x28]
