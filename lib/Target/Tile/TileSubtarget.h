//===-- TileSubtarget.h - Define Subtarget for the Tile ---------*- C++ -*-===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This file declares the Tile specific subclass of TargetSubtargetInfo.
//
//===----------------------------------------------------------------------===//

#ifndef TILESUBTARGET_H
#define TILESUBTARGET_H

#include "llvm/Target/TargetSubtargetInfo.h"
#include "llvm/MC/MCInstrItineraries.h"
#include <string>

#define GET_SUBTARGETINFO_HEADER
#include "TileGenSubtargetInfo.inc"

namespace llvm {
class StringRef;

class TileSubtarget : public TileGenSubtargetInfo {
  virtual void anchor();

protected:
  InstrItineraryData InstrItins;

public:
  virtual bool enablePostRAScheduler(CodeGenOpt::Level OptLevel,
                                     AntiDepBreakMode &Mode,
                                     RegClassVector &CriticalPathRCs) const;

  // This constructor initializes the data members to match that
  // of the specified triple.
  TileSubtarget(const std::string &TT, const std::string &CPU,
                const std::string &FS);

  const InstrItineraryData &getInstrItineraryData() const { return InstrItins; }

  // Parses features string setting specified subtarget options.
  // Definition of function is auto generated by tblgen.
  void ParseSubtargetFeatures(StringRef CPU, StringRef FS);

  // Return the pointer size and type alignment properties of this subtarget.
  const char *getTargetDataLayout() const {
    return "e-p:64:64:64-i8:8:32-i16:16:32-i64:64:64-f128:128:128-n32:64";
  }
};
} // End llvm namespace

#endif
